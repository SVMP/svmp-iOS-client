// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class AuthRequest;
@class AuthRequest_Builder;
@class AuthResponse;
@class AuthResponse_Builder;
@class Intent;
@class Intent_Builder;
@class Intent_Tuple;
@class Intent_Tuple_Builder;
@class LocationProviderEnabled;
@class LocationProviderEnabled_Builder;
@class LocationProviderInfo;
@class LocationProviderInfo_Builder;
@class LocationProviderStatus;
@class LocationProviderStatus_Builder;
@class LocationProviderStatus_Tuple;
@class LocationProviderStatus_Tuple_Builder;
@class LocationRequest;
@class LocationRequest_Builder;
@class LocationResponse;
@class LocationResponse_Builder;
@class LocationSubscribe;
@class LocationSubscribe_Builder;
@class LocationUnsubscribe;
@class LocationUnsubscribe_Builder;
@class LocationUpdate;
@class LocationUpdate_Builder;
@class Notification;
@class Notification_Builder;
@class Ping;
@class Ping_Builder;
@class Request;
@class Request_Builder;
@class Response;
@class Response_Builder;
@class RotationInfo;
@class RotationInfo_Builder;
@class ScreenInfo;
@class ScreenInfo_Builder;
@class SensorEvent;
@class SensorEvent_Builder;
@class SensorSubscribe;
@class SensorSubscribe_Builder;
@class SensorUnsubscribe;
@class SensorUnsubscribe_Builder;
@class SessionInfo;
@class SessionInfo_Builder;
@class TouchEvent;
@class TouchEvent_Builder;
@class TouchEvent_PointerCoords;
@class TouchEvent_PointerCoords_Builder;
@class VideoRequest;
@class VideoRequest_Builder;
@class VideoStreamInfo;
@class VideoStreamInfo_Builder;
@class WebRTCMessage;
@class WebRTCMessage_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  IntentActionActionView = 1,
  IntentActionActionDial = 2,
} IntentAction;

BOOL IntentActionIsValidValue(IntentAction value);

typedef enum {
  SensorTypeAccelerometer = 1,
  SensorTypeMagneticField = 2,
  SensorTypeOrientation = 3,
  SensorTypeGyroscope = 4,
  SensorTypeLight = 5,
  SensorTypePressure = 6,
  SensorTypeTemperature = 7,
  SensorTypeProximity = 8,
  SensorTypeGravity = 9,
  SensorTypeLinearAcceleration = 10,
  SensorTypeRotationVector = 11,
  SensorTypeRelativeHumidity = 12,
  SensorTypeAmbientTemperature = 13,
} SensorType;

BOOL SensorTypeIsValidValue(SensorType value);

typedef enum {
  Request_RequestTypeAuth = 0,
  Request_RequestTypeVideoParams = 1,
  Request_RequestTypeTouchevent = 2,
  Request_RequestTypeSensorevent = 3,
  Request_RequestTypeLocation = 4,
  Request_RequestTypeIntent = 5,
  Request_RequestTypeScreeninfo = 6,
  Request_RequestTypeVideoStart = 7,
  Request_RequestTypeVideoStop = 8,
  Request_RequestTypeWebrtc = 9,
  Request_RequestTypeRotationInfo = 10,
  Request_RequestTypePing = 11,
} Request_RequestType;

BOOL Request_RequestTypeIsValidValue(Request_RequestType value);

typedef enum {
  Response_ResponseTypeError = 0,
  Response_ResponseTypeAuth = 1,
  Response_ResponseTypeVmready = 2,
  Response_ResponseTypeScreeninfo = 3,
  Response_ResponseTypeVidstreaminfo = 4,
  Response_ResponseTypeIntent = 5,
  Response_ResponseTypeNotification = 6,
  Response_ResponseTypeLocation = 7,
  Response_ResponseTypeVideostart = 8,
  Response_ResponseTypeVideostop = 9,
  Response_ResponseTypeVideopause = 10,
  Response_ResponseTypeWebrtc = 11,
  Response_ResponseTypePing = 12,
} Response_ResponseType;

BOOL Response_ResponseTypeIsValidValue(Response_ResponseType value);

typedef enum {
  LocationRequest_LocationRequestTypeProviderinfo = 1,
  LocationRequest_LocationRequestTypeProviderstatus = 2,
  LocationRequest_LocationRequestTypeProviderenabled = 3,
  LocationRequest_LocationRequestTypeLocationupdate = 4,
} LocationRequest_LocationRequestType;

BOOL LocationRequest_LocationRequestTypeIsValidValue(LocationRequest_LocationRequestType value);

typedef enum {
  LocationSubscribe_LocationSubscribeTypeSingleUpdate = 1,
  LocationSubscribe_LocationSubscribeTypeMultipleUpdates = 2,
} LocationSubscribe_LocationSubscribeType;

BOOL LocationSubscribe_LocationSubscribeTypeIsValidValue(LocationSubscribe_LocationSubscribeType value);

typedef enum {
  LocationResponse_LocationResponseTypeSubscribe = 1,
  LocationResponse_LocationResponseTypeUnsubscribe = 2,
} LocationResponse_LocationResponseType;

BOOL LocationResponse_LocationResponseTypeIsValidValue(LocationResponse_LocationResponseType value);

typedef enum {
  AuthRequest_AuthRequestTypeSessionToken = 0,
  AuthRequest_AuthRequestTypeAuthentication = 1,
} AuthRequest_AuthRequestType;

BOOL AuthRequest_AuthRequestTypeIsValidValue(AuthRequest_AuthRequestType value);

typedef enum {
  AuthResponse_AuthResponseTypeAuthOk = 0,
  AuthResponse_AuthResponseTypeAuthFail = 1,
  AuthResponse_AuthResponseTypeSessionMaxTimeout = 2,
  AuthResponse_AuthResponseTypeSessionIdleTimeout = 3,
} AuthResponse_AuthResponseType;

BOOL AuthResponse_AuthResponseTypeIsValidValue(AuthResponse_AuthResponseType value);

typedef enum {
  WebRTCMessage_WebRTCTypeOffer = 1,
  WebRTCMessage_WebRTCTypeAnswer = 2,
  WebRTCMessage_WebRTCTypeCandidate = 3,
  WebRTCMessage_WebRTCTypeBye = 4,
} WebRTCMessage_WebRTCType;

BOOL WebRTCMessage_WebRTCTypeIsValidValue(WebRTCMessage_WebRTCType value);


@interface SvmpRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Request_type @"type"
#define Request_authRequest @"authRequest"
#define Request_videoRequest @"videoRequest"
#define Request_touch @"touch"
#define Request_sensor @"sensor"
#define Request_locationRequest @"locationRequest"
#define Request_intent @"intent"
#define Request_webrtcMsg @"webrtcMsg"
#define Request_rotationInfo @"rotationInfo"
#define Request_pingRequest @"pingRequest"
#define Request_videoInfo @"videoInfo"
@interface Request : PBGeneratedMessage {
@private
  BOOL hasAuthRequest_:1;
  BOOL hasVideoRequest_:1;
  BOOL hasTouch_:1;
  BOOL hasSensor_:1;
  BOOL hasLocationRequest_:1;
  BOOL hasIntent_:1;
  BOOL hasWebrtcMsg_:1;
  BOOL hasRotationInfo_:1;
  BOOL hasPingRequest_:1;
  BOOL hasVideoInfo_:1;
  BOOL hasType_:1;
  AuthRequest* authRequest;
  VideoRequest* videoRequest;
  TouchEvent* touch;
  SensorEvent* sensor;
  LocationRequest* locationRequest;
  Intent* intent;
  WebRTCMessage* webrtcMsg;
  RotationInfo* rotationInfo;
  Ping* pingRequest;
  VideoStreamInfo* videoInfo;
  Request_RequestType type;
}
- (BOOL) hasType;
- (BOOL) hasAuthRequest;
- (BOOL) hasVideoRequest;
- (BOOL) hasTouch;
- (BOOL) hasSensor;
- (BOOL) hasLocationRequest;
- (BOOL) hasIntent;
- (BOOL) hasWebrtcMsg;
- (BOOL) hasRotationInfo;
- (BOOL) hasPingRequest;
- (BOOL) hasVideoInfo;
@property (readonly) Request_RequestType type;
@property (readonly, strong) AuthRequest* authRequest;
@property (readonly, strong) VideoRequest* videoRequest;
@property (readonly, strong) TouchEvent* touch;
@property (readonly, strong) SensorEvent* sensor;
@property (readonly, strong) LocationRequest* locationRequest;
@property (readonly, strong) Intent* intent;
@property (readonly, strong) WebRTCMessage* webrtcMsg;
@property (readonly, strong) RotationInfo* rotationInfo;
@property (readonly, strong) Ping* pingRequest;
@property (readonly, strong) VideoStreamInfo* videoInfo;

+ (Request*) defaultInstance;
- (Request*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Request_Builder*) builder;
+ (Request_Builder*) builder;
+ (Request_Builder*) builderWithPrototype:(Request*) prototype;
- (Request_Builder*) toBuilder;

+ (Request*) parseFromData:(NSData*) data;
+ (Request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromInputStream:(NSInputStream*) input;
+ (Request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Request_Builder : PBGeneratedMessage_Builder {
@private
  Request* result;
}

- (Request*) defaultInstance;

- (Request_Builder*) clear;
- (Request_Builder*) clone;

- (Request*) build;
- (Request*) buildPartial;

- (Request_Builder*) mergeFrom:(Request*) other;
- (Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (Request_RequestType) type;
- (Request_Builder*) setType:(Request_RequestType) value;
- (Request_Builder*) clearType;

- (BOOL) hasAuthRequest;
- (AuthRequest*) authRequest;
- (Request_Builder*) setAuthRequest:(AuthRequest*) value;
- (Request_Builder*) setAuthRequestBuilder:(AuthRequest_Builder*) builderForValue;
- (Request_Builder*) mergeAuthRequest:(AuthRequest*) value;
- (Request_Builder*) clearAuthRequest;

- (BOOL) hasVideoRequest;
- (VideoRequest*) videoRequest;
- (Request_Builder*) setVideoRequest:(VideoRequest*) value;
- (Request_Builder*) setVideoRequestBuilder:(VideoRequest_Builder*) builderForValue;
- (Request_Builder*) mergeVideoRequest:(VideoRequest*) value;
- (Request_Builder*) clearVideoRequest;

- (BOOL) hasTouch;
- (TouchEvent*) touch;
- (Request_Builder*) setTouch:(TouchEvent*) value;
- (Request_Builder*) setTouchBuilder:(TouchEvent_Builder*) builderForValue;
- (Request_Builder*) mergeTouch:(TouchEvent*) value;
- (Request_Builder*) clearTouch;

- (BOOL) hasSensor;
- (SensorEvent*) sensor;
- (Request_Builder*) setSensor:(SensorEvent*) value;
- (Request_Builder*) setSensorBuilder:(SensorEvent_Builder*) builderForValue;
- (Request_Builder*) mergeSensor:(SensorEvent*) value;
- (Request_Builder*) clearSensor;

- (BOOL) hasLocationRequest;
- (LocationRequest*) locationRequest;
- (Request_Builder*) setLocationRequest:(LocationRequest*) value;
- (Request_Builder*) setLocationRequestBuilder:(LocationRequest_Builder*) builderForValue;
- (Request_Builder*) mergeLocationRequest:(LocationRequest*) value;
- (Request_Builder*) clearLocationRequest;

- (BOOL) hasIntent;
- (Intent*) intent;
- (Request_Builder*) setIntent:(Intent*) value;
- (Request_Builder*) setIntentBuilder:(Intent_Builder*) builderForValue;
- (Request_Builder*) mergeIntent:(Intent*) value;
- (Request_Builder*) clearIntent;

- (BOOL) hasWebrtcMsg;
- (WebRTCMessage*) webrtcMsg;
- (Request_Builder*) setWebrtcMsg:(WebRTCMessage*) value;
- (Request_Builder*) setWebrtcMsgBuilder:(WebRTCMessage_Builder*) builderForValue;
- (Request_Builder*) mergeWebrtcMsg:(WebRTCMessage*) value;
- (Request_Builder*) clearWebrtcMsg;

- (BOOL) hasRotationInfo;
- (RotationInfo*) rotationInfo;
- (Request_Builder*) setRotationInfo:(RotationInfo*) value;
- (Request_Builder*) setRotationInfoBuilder:(RotationInfo_Builder*) builderForValue;
- (Request_Builder*) mergeRotationInfo:(RotationInfo*) value;
- (Request_Builder*) clearRotationInfo;

- (BOOL) hasPingRequest;
- (Ping*) pingRequest;
- (Request_Builder*) setPingRequest:(Ping*) value;
- (Request_Builder*) setPingRequestBuilder:(Ping_Builder*) builderForValue;
- (Request_Builder*) mergePingRequest:(Ping*) value;
- (Request_Builder*) clearPingRequest;

- (BOOL) hasVideoInfo;
- (VideoStreamInfo*) videoInfo;
- (Request_Builder*) setVideoInfo:(VideoStreamInfo*) value;
- (Request_Builder*) setVideoInfoBuilder:(VideoStreamInfo_Builder*) builderForValue;
- (Request_Builder*) mergeVideoInfo:(VideoStreamInfo*) value;
- (Request_Builder*) clearVideoInfo;
@end

#define Response_type @"type"
#define Response_message @"message"
#define Response_authResponse @"authResponse"
#define Response_intent @"intent"
#define Response_notification @"notification"
#define Response_locationResponse @"locationResponse"
#define Response_pingResponse @"pingResponse"
#define Response_screenInfo @"screenInfo"
#define Response_videoInfo @"videoInfo"
#define Response_webrtcMsg @"webrtcMsg"
@interface Response : PBGeneratedMessage {
@private
  BOOL hasMessage_:1;
  BOOL hasAuthResponse_:1;
  BOOL hasIntent_:1;
  BOOL hasNotification_:1;
  BOOL hasLocationResponse_:1;
  BOOL hasPingResponse_:1;
  BOOL hasScreenInfo_:1;
  BOOL hasVideoInfo_:1;
  BOOL hasWebrtcMsg_:1;
  BOOL hasType_:1;
  NSString* message;
  AuthResponse* authResponse;
  Intent* intent;
  Notification* notification;
  LocationResponse* locationResponse;
  Ping* pingResponse;
  ScreenInfo* screenInfo;
  VideoStreamInfo* videoInfo;
  WebRTCMessage* webrtcMsg;
  Response_ResponseType type;
}
- (BOOL) hasType;
- (BOOL) hasMessage;
- (BOOL) hasAuthResponse;
- (BOOL) hasIntent;
- (BOOL) hasNotification;
- (BOOL) hasLocationResponse;
- (BOOL) hasPingResponse;
- (BOOL) hasScreenInfo;
- (BOOL) hasVideoInfo;
- (BOOL) hasWebrtcMsg;
@property (readonly) Response_ResponseType type;
@property (readonly, strong) NSString* message;
@property (readonly, strong) AuthResponse* authResponse;
@property (readonly, strong) Intent* intent;
@property (readonly, strong) Notification* notification;
@property (readonly, strong) LocationResponse* locationResponse;
@property (readonly, strong) Ping* pingResponse;
@property (readonly, strong) ScreenInfo* screenInfo;
@property (readonly, strong) VideoStreamInfo* videoInfo;
@property (readonly, strong) WebRTCMessage* webrtcMsg;

+ (Response*) defaultInstance;
- (Response*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Response_Builder*) builder;
+ (Response_Builder*) builder;
+ (Response_Builder*) builderWithPrototype:(Response*) prototype;
- (Response_Builder*) toBuilder;

+ (Response*) parseFromData:(NSData*) data;
+ (Response*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromInputStream:(NSInputStream*) input;
+ (Response*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Response_Builder : PBGeneratedMessage_Builder {
@private
  Response* result;
}

- (Response*) defaultInstance;

- (Response_Builder*) clear;
- (Response_Builder*) clone;

- (Response*) build;
- (Response*) buildPartial;

- (Response_Builder*) mergeFrom:(Response*) other;
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (Response_ResponseType) type;
- (Response_Builder*) setType:(Response_ResponseType) value;
- (Response_Builder*) clearType;

- (BOOL) hasMessage;
- (NSString*) message;
- (Response_Builder*) setMessage:(NSString*) value;
- (Response_Builder*) clearMessage;

- (BOOL) hasAuthResponse;
- (AuthResponse*) authResponse;
- (Response_Builder*) setAuthResponse:(AuthResponse*) value;
- (Response_Builder*) setAuthResponseBuilder:(AuthResponse_Builder*) builderForValue;
- (Response_Builder*) mergeAuthResponse:(AuthResponse*) value;
- (Response_Builder*) clearAuthResponse;

- (BOOL) hasIntent;
- (Intent*) intent;
- (Response_Builder*) setIntent:(Intent*) value;
- (Response_Builder*) setIntentBuilder:(Intent_Builder*) builderForValue;
- (Response_Builder*) mergeIntent:(Intent*) value;
- (Response_Builder*) clearIntent;

- (BOOL) hasNotification;
- (Notification*) notification;
- (Response_Builder*) setNotification:(Notification*) value;
- (Response_Builder*) setNotificationBuilder:(Notification_Builder*) builderForValue;
- (Response_Builder*) mergeNotification:(Notification*) value;
- (Response_Builder*) clearNotification;

- (BOOL) hasLocationResponse;
- (LocationResponse*) locationResponse;
- (Response_Builder*) setLocationResponse:(LocationResponse*) value;
- (Response_Builder*) setLocationResponseBuilder:(LocationResponse_Builder*) builderForValue;
- (Response_Builder*) mergeLocationResponse:(LocationResponse*) value;
- (Response_Builder*) clearLocationResponse;

- (BOOL) hasPingResponse;
- (Ping*) pingResponse;
- (Response_Builder*) setPingResponse:(Ping*) value;
- (Response_Builder*) setPingResponseBuilder:(Ping_Builder*) builderForValue;
- (Response_Builder*) mergePingResponse:(Ping*) value;
- (Response_Builder*) clearPingResponse;

- (BOOL) hasScreenInfo;
- (ScreenInfo*) screenInfo;
- (Response_Builder*) setScreenInfo:(ScreenInfo*) value;
- (Response_Builder*) setScreenInfoBuilder:(ScreenInfo_Builder*) builderForValue;
- (Response_Builder*) mergeScreenInfo:(ScreenInfo*) value;
- (Response_Builder*) clearScreenInfo;

- (BOOL) hasVideoInfo;
- (VideoStreamInfo*) videoInfo;
- (Response_Builder*) setVideoInfo:(VideoStreamInfo*) value;
- (Response_Builder*) setVideoInfoBuilder:(VideoStreamInfo_Builder*) builderForValue;
- (Response_Builder*) mergeVideoInfo:(VideoStreamInfo*) value;
- (Response_Builder*) clearVideoInfo;

- (BOOL) hasWebrtcMsg;
- (WebRTCMessage*) webrtcMsg;
- (Response_Builder*) setWebrtcMsg:(WebRTCMessage*) value;
- (Response_Builder*) setWebrtcMsgBuilder:(WebRTCMessage_Builder*) builderForValue;
- (Response_Builder*) mergeWebrtcMsg:(WebRTCMessage*) value;
- (Response_Builder*) clearWebrtcMsg;
@end

#define Intent_action @"action"
#define Intent_extras @"extras"
#define Intent_data @"data"
#define Intent_flags @"flags"
#define Intent_categories @"categories"
@interface Intent : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  BOOL hasAction_:1;
  NSString* data;
  IntentAction action;
  PBAppendableArray * flagsArray;
  NSMutableArray * categoriesArray;
  NSMutableArray * extrasArray;
}
- (BOOL) hasAction;
- (BOOL) hasData;
@property (readonly) IntentAction action;
@property (readonly, strong) NSArray * extras;
@property (readonly, strong) NSString* data;
@property (readonly, strong) PBArray * flags;
@property (readonly, strong) PBArray * categories;
- (Intent_Tuple*)extrasAtIndex:(NSUInteger)index;
- (int32_t)flagsAtIndex:(NSUInteger)index;
- (NSString*)categoriesAtIndex:(NSUInteger)index;

+ (Intent*) defaultInstance;
- (Intent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Intent_Builder*) builder;
+ (Intent_Builder*) builder;
+ (Intent_Builder*) builderWithPrototype:(Intent*) prototype;
- (Intent_Builder*) toBuilder;

+ (Intent*) parseFromData:(NSData*) data;
+ (Intent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Intent*) parseFromInputStream:(NSInputStream*) input;
+ (Intent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Intent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Intent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Tuple_key @"key"
#define Tuple_value @"value"
@interface Intent_Tuple : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  NSString* key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly, strong) NSString* key;
@property (readonly, strong) NSString* value;

+ (Intent_Tuple*) defaultInstance;
- (Intent_Tuple*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Intent_Tuple_Builder*) builder;
+ (Intent_Tuple_Builder*) builder;
+ (Intent_Tuple_Builder*) builderWithPrototype:(Intent_Tuple*) prototype;
- (Intent_Tuple_Builder*) toBuilder;

+ (Intent_Tuple*) parseFromData:(NSData*) data;
+ (Intent_Tuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Intent_Tuple*) parseFromInputStream:(NSInputStream*) input;
+ (Intent_Tuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Intent_Tuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Intent_Tuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Intent_Tuple_Builder : PBGeneratedMessage_Builder {
@private
  Intent_Tuple* result;
}

- (Intent_Tuple*) defaultInstance;

- (Intent_Tuple_Builder*) clear;
- (Intent_Tuple_Builder*) clone;

- (Intent_Tuple*) build;
- (Intent_Tuple*) buildPartial;

- (Intent_Tuple_Builder*) mergeFrom:(Intent_Tuple*) other;
- (Intent_Tuple_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Intent_Tuple_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (Intent_Tuple_Builder*) setKey:(NSString*) value;
- (Intent_Tuple_Builder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (Intent_Tuple_Builder*) setValue:(NSString*) value;
- (Intent_Tuple_Builder*) clearValue;
@end

@interface Intent_Builder : PBGeneratedMessage_Builder {
@private
  Intent* result;
}

- (Intent*) defaultInstance;

- (Intent_Builder*) clear;
- (Intent_Builder*) clone;

- (Intent*) build;
- (Intent*) buildPartial;

- (Intent_Builder*) mergeFrom:(Intent*) other;
- (Intent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Intent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (IntentAction) action;
- (Intent_Builder*) setAction:(IntentAction) value;
- (Intent_Builder*) clearAction;

- (NSMutableArray *)extras;
- (Intent_Tuple*)extrasAtIndex:(NSUInteger)index;
- (Intent_Builder *)addExtras:(Intent_Tuple*)value;
- (Intent_Builder *)setExtrasArray:(NSArray *)array;
- (Intent_Builder *)clearExtras;

- (BOOL) hasData;
- (NSString*) data;
- (Intent_Builder*) setData:(NSString*) value;
- (Intent_Builder*) clearData;

- (PBAppendableArray *)flags;
- (int32_t)flagsAtIndex:(NSUInteger)index;
- (Intent_Builder *)addFlags:(int32_t)value;
- (Intent_Builder *)setFlagsArray:(NSArray *)array;
- (Intent_Builder *)setFlagsValues:(const int32_t *)values count:(NSUInteger)count;
- (Intent_Builder *)clearFlags;

- (NSMutableArray *)categories;
- (NSString*)categoriesAtIndex:(NSUInteger)index;
- (Intent_Builder *)addCategories:(NSString*)value;
- (Intent_Builder *)setCategoriesArray:(NSArray *)array;
- (Intent_Builder *)clearCategories;
@end

#define Notification_contentTitle @"contentTitle"
#define Notification_contentText @"contentText"
#define Notification_smallIcon @"smallIcon"
#define Notification_largeIcon @"largeIcon"
@interface Notification : PBGeneratedMessage {
@private
  BOOL hasContentTitle_:1;
  BOOL hasContentText_:1;
  BOOL hasSmallIcon_:1;
  BOOL hasLargeIcon_:1;
  NSString* contentTitle;
  NSString* contentText;
  NSData* smallIcon;
  NSData* largeIcon;
}
- (BOOL) hasContentTitle;
- (BOOL) hasContentText;
- (BOOL) hasSmallIcon;
- (BOOL) hasLargeIcon;
@property (readonly, strong) NSString* contentTitle;
@property (readonly, strong) NSString* contentText;
@property (readonly, strong) NSData* smallIcon;
@property (readonly, strong) NSData* largeIcon;

+ (Notification*) defaultInstance;
- (Notification*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Notification_Builder*) builder;
+ (Notification_Builder*) builder;
+ (Notification_Builder*) builderWithPrototype:(Notification*) prototype;
- (Notification_Builder*) toBuilder;

+ (Notification*) parseFromData:(NSData*) data;
+ (Notification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Notification*) parseFromInputStream:(NSInputStream*) input;
+ (Notification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Notification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Notification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Notification_Builder : PBGeneratedMessage_Builder {
@private
  Notification* result;
}

- (Notification*) defaultInstance;

- (Notification_Builder*) clear;
- (Notification_Builder*) clone;

- (Notification*) build;
- (Notification*) buildPartial;

- (Notification_Builder*) mergeFrom:(Notification*) other;
- (Notification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Notification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasContentTitle;
- (NSString*) contentTitle;
- (Notification_Builder*) setContentTitle:(NSString*) value;
- (Notification_Builder*) clearContentTitle;

- (BOOL) hasContentText;
- (NSString*) contentText;
- (Notification_Builder*) setContentText:(NSString*) value;
- (Notification_Builder*) clearContentText;

- (BOOL) hasSmallIcon;
- (NSData*) smallIcon;
- (Notification_Builder*) setSmallIcon:(NSData*) value;
- (Notification_Builder*) clearSmallIcon;

- (BOOL) hasLargeIcon;
- (NSData*) largeIcon;
- (Notification_Builder*) setLargeIcon:(NSData*) value;
- (Notification_Builder*) clearLargeIcon;
@end

#define TouchEvent_action @"action"
#define TouchEvent_items @"items"
@interface TouchEvent : PBGeneratedMessage {
@private
  BOOL hasAction_:1;
  int32_t action;
  NSMutableArray * itemsArray;
}
- (BOOL) hasAction;
@property (readonly) int32_t action;
@property (readonly, strong) NSArray * items;
- (TouchEvent_PointerCoords*)itemsAtIndex:(NSUInteger)index;

+ (TouchEvent*) defaultInstance;
- (TouchEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TouchEvent_Builder*) builder;
+ (TouchEvent_Builder*) builder;
+ (TouchEvent_Builder*) builderWithPrototype:(TouchEvent*) prototype;
- (TouchEvent_Builder*) toBuilder;

+ (TouchEvent*) parseFromData:(NSData*) data;
+ (TouchEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TouchEvent*) parseFromInputStream:(NSInputStream*) input;
+ (TouchEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TouchEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TouchEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define PointerCoords_id @"id"
#define PointerCoords_x @"x"
#define PointerCoords_y @"y"
@interface TouchEvent_PointerCoords : PBGeneratedMessage {
@private
  BOOL hasX_:1;
  BOOL hasY_:1;
  BOOL hasId_:1;
  Float32 x;
  Float32 y;
  int32_t id;
}
- (BOOL) hasId;
- (BOOL) hasX;
- (BOOL) hasY;
@property (readonly) int32_t id;
@property (readonly) Float32 x;
@property (readonly) Float32 y;

+ (TouchEvent_PointerCoords*) defaultInstance;
- (TouchEvent_PointerCoords*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TouchEvent_PointerCoords_Builder*) builder;
+ (TouchEvent_PointerCoords_Builder*) builder;
+ (TouchEvent_PointerCoords_Builder*) builderWithPrototype:(TouchEvent_PointerCoords*) prototype;
- (TouchEvent_PointerCoords_Builder*) toBuilder;

+ (TouchEvent_PointerCoords*) parseFromData:(NSData*) data;
+ (TouchEvent_PointerCoords*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TouchEvent_PointerCoords*) parseFromInputStream:(NSInputStream*) input;
+ (TouchEvent_PointerCoords*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TouchEvent_PointerCoords*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TouchEvent_PointerCoords*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TouchEvent_PointerCoords_Builder : PBGeneratedMessage_Builder {
@private
  TouchEvent_PointerCoords* result;
}

- (TouchEvent_PointerCoords*) defaultInstance;

- (TouchEvent_PointerCoords_Builder*) clear;
- (TouchEvent_PointerCoords_Builder*) clone;

- (TouchEvent_PointerCoords*) build;
- (TouchEvent_PointerCoords*) buildPartial;

- (TouchEvent_PointerCoords_Builder*) mergeFrom:(TouchEvent_PointerCoords*) other;
- (TouchEvent_PointerCoords_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TouchEvent_PointerCoords_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (TouchEvent_PointerCoords_Builder*) setId:(int32_t) value;
- (TouchEvent_PointerCoords_Builder*) clearId;

- (BOOL) hasX;
- (Float32) x;
- (TouchEvent_PointerCoords_Builder*) setX:(Float32) value;
- (TouchEvent_PointerCoords_Builder*) clearX;

- (BOOL) hasY;
- (Float32) y;
- (TouchEvent_PointerCoords_Builder*) setY:(Float32) value;
- (TouchEvent_PointerCoords_Builder*) clearY;
@end

@interface TouchEvent_Builder : PBGeneratedMessage_Builder {
@private
  TouchEvent* result;
}

- (TouchEvent*) defaultInstance;

- (TouchEvent_Builder*) clear;
- (TouchEvent_Builder*) clone;

- (TouchEvent*) build;
- (TouchEvent*) buildPartial;

- (TouchEvent_Builder*) mergeFrom:(TouchEvent*) other;
- (TouchEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TouchEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (int32_t) action;
- (TouchEvent_Builder*) setAction:(int32_t) value;
- (TouchEvent_Builder*) clearAction;

- (NSMutableArray *)items;
- (TouchEvent_PointerCoords*)itemsAtIndex:(NSUInteger)index;
- (TouchEvent_Builder *)addItems:(TouchEvent_PointerCoords*)value;
- (TouchEvent_Builder *)setItemsArray:(NSArray *)array;
- (TouchEvent_Builder *)clearItems;
@end

#define ScreenInfo_x @"x"
#define ScreenInfo_y @"y"
@interface ScreenInfo : PBGeneratedMessage {
@private
  BOOL hasX_:1;
  BOOL hasY_:1;
  int32_t x;
  int32_t y;
}
- (BOOL) hasX;
- (BOOL) hasY;
@property (readonly) int32_t x;
@property (readonly) int32_t y;

+ (ScreenInfo*) defaultInstance;
- (ScreenInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ScreenInfo_Builder*) builder;
+ (ScreenInfo_Builder*) builder;
+ (ScreenInfo_Builder*) builderWithPrototype:(ScreenInfo*) prototype;
- (ScreenInfo_Builder*) toBuilder;

+ (ScreenInfo*) parseFromData:(NSData*) data;
+ (ScreenInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ScreenInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ScreenInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ScreenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ScreenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ScreenInfo_Builder : PBGeneratedMessage_Builder {
@private
  ScreenInfo* result;
}

- (ScreenInfo*) defaultInstance;

- (ScreenInfo_Builder*) clear;
- (ScreenInfo_Builder*) clone;

- (ScreenInfo*) build;
- (ScreenInfo*) buildPartial;

- (ScreenInfo_Builder*) mergeFrom:(ScreenInfo*) other;
- (ScreenInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ScreenInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasX;
- (int32_t) x;
- (ScreenInfo_Builder*) setX:(int32_t) value;
- (ScreenInfo_Builder*) clearX;

- (BOOL) hasY;
- (int32_t) y;
- (ScreenInfo_Builder*) setY:(int32_t) value;
- (ScreenInfo_Builder*) clearY;
@end

#define SensorEvent_type @"type"
#define SensorEvent_accuracy @"accuracy"
#define SensorEvent_timestamp @"timestamp"
#define SensorEvent_values @"values"
@interface SensorEvent : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasAccuracy_:1;
  BOOL hasType_:1;
  int64_t timestamp;
  int32_t accuracy;
  SensorType type;
  PBAppendableArray * valuesArray;
}
- (BOOL) hasType;
- (BOOL) hasAccuracy;
- (BOOL) hasTimestamp;
@property (readonly) SensorType type;
@property (readonly) int32_t accuracy;
@property (readonly) int64_t timestamp;
@property (readonly, strong) PBArray * values;
- (Float32)valuesAtIndex:(NSUInteger)index;

+ (SensorEvent*) defaultInstance;
- (SensorEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SensorEvent_Builder*) builder;
+ (SensorEvent_Builder*) builder;
+ (SensorEvent_Builder*) builderWithPrototype:(SensorEvent*) prototype;
- (SensorEvent_Builder*) toBuilder;

+ (SensorEvent*) parseFromData:(NSData*) data;
+ (SensorEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorEvent*) parseFromInputStream:(NSInputStream*) input;
+ (SensorEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SensorEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SensorEvent_Builder : PBGeneratedMessage_Builder {
@private
  SensorEvent* result;
}

- (SensorEvent*) defaultInstance;

- (SensorEvent_Builder*) clear;
- (SensorEvent_Builder*) clone;

- (SensorEvent*) build;
- (SensorEvent*) buildPartial;

- (SensorEvent_Builder*) mergeFrom:(SensorEvent*) other;
- (SensorEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SensorEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SensorType) type;
- (SensorEvent_Builder*) setType:(SensorType) value;
- (SensorEvent_Builder*) clearType;

- (BOOL) hasAccuracy;
- (int32_t) accuracy;
- (SensorEvent_Builder*) setAccuracy:(int32_t) value;
- (SensorEvent_Builder*) clearAccuracy;

- (BOOL) hasTimestamp;
- (int64_t) timestamp;
- (SensorEvent_Builder*) setTimestamp:(int64_t) value;
- (SensorEvent_Builder*) clearTimestamp;

- (PBAppendableArray *)values;
- (Float32)valuesAtIndex:(NSUInteger)index;
- (SensorEvent_Builder *)addValues:(Float32)value;
- (SensorEvent_Builder *)setValuesArray:(NSArray *)array;
- (SensorEvent_Builder *)setValuesValues:(const Float32 *)values count:(NSUInteger)count;
- (SensorEvent_Builder *)clearValues;
@end

#define SensorSubscribe_type @"type"
#define SensorSubscribe_frequency @"frequency"
@interface SensorSubscribe : PBGeneratedMessage {
@private
  BOOL hasFrequency_:1;
  BOOL hasType_:1;
  int32_t frequency;
  SensorType type;
}
- (BOOL) hasType;
- (BOOL) hasFrequency;
@property (readonly) SensorType type;
@property (readonly) int32_t frequency;

+ (SensorSubscribe*) defaultInstance;
- (SensorSubscribe*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SensorSubscribe_Builder*) builder;
+ (SensorSubscribe_Builder*) builder;
+ (SensorSubscribe_Builder*) builderWithPrototype:(SensorSubscribe*) prototype;
- (SensorSubscribe_Builder*) toBuilder;

+ (SensorSubscribe*) parseFromData:(NSData*) data;
+ (SensorSubscribe*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorSubscribe*) parseFromInputStream:(NSInputStream*) input;
+ (SensorSubscribe*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorSubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SensorSubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SensorSubscribe_Builder : PBGeneratedMessage_Builder {
@private
  SensorSubscribe* result;
}

- (SensorSubscribe*) defaultInstance;

- (SensorSubscribe_Builder*) clear;
- (SensorSubscribe_Builder*) clone;

- (SensorSubscribe*) build;
- (SensorSubscribe*) buildPartial;

- (SensorSubscribe_Builder*) mergeFrom:(SensorSubscribe*) other;
- (SensorSubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SensorSubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SensorType) type;
- (SensorSubscribe_Builder*) setType:(SensorType) value;
- (SensorSubscribe_Builder*) clearType;

- (BOOL) hasFrequency;
- (int32_t) frequency;
- (SensorSubscribe_Builder*) setFrequency:(int32_t) value;
- (SensorSubscribe_Builder*) clearFrequency;
@end

#define SensorUnsubscribe_type @"type"
@interface SensorUnsubscribe : PBGeneratedMessage {
@private
  BOOL hasType_:1;
  SensorType type;
}
- (BOOL) hasType;
@property (readonly) SensorType type;

+ (SensorUnsubscribe*) defaultInstance;
- (SensorUnsubscribe*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SensorUnsubscribe_Builder*) builder;
+ (SensorUnsubscribe_Builder*) builder;
+ (SensorUnsubscribe_Builder*) builderWithPrototype:(SensorUnsubscribe*) prototype;
- (SensorUnsubscribe_Builder*) toBuilder;

+ (SensorUnsubscribe*) parseFromData:(NSData*) data;
+ (SensorUnsubscribe*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorUnsubscribe*) parseFromInputStream:(NSInputStream*) input;
+ (SensorUnsubscribe*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorUnsubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SensorUnsubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SensorUnsubscribe_Builder : PBGeneratedMessage_Builder {
@private
  SensorUnsubscribe* result;
}

- (SensorUnsubscribe*) defaultInstance;

- (SensorUnsubscribe_Builder*) clear;
- (SensorUnsubscribe_Builder*) clone;

- (SensorUnsubscribe*) build;
- (SensorUnsubscribe*) buildPartial;

- (SensorUnsubscribe_Builder*) mergeFrom:(SensorUnsubscribe*) other;
- (SensorUnsubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SensorUnsubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SensorType) type;
- (SensorUnsubscribe_Builder*) setType:(SensorType) value;
- (SensorUnsubscribe_Builder*) clearType;
@end

#define LocationProviderInfo_provider @"provider"
#define LocationProviderInfo_requiresNetwork @"requiresNetwork"
#define LocationProviderInfo_requiresSatellite @"requiresSatellite"
#define LocationProviderInfo_requiresCell @"requiresCell"
#define LocationProviderInfo_hasMonetaryCost @"hasMonetaryCost"
#define LocationProviderInfo_supportsAltitude @"supportsAltitude"
#define LocationProviderInfo_supportsSpeed @"supportsSpeed"
#define LocationProviderInfo_supportsBearing @"supportsBearing"
#define LocationProviderInfo_powerRequirement @"powerRequirement"
#define LocationProviderInfo_accuracy @"accuracy"
@interface LocationProviderInfo : PBGeneratedMessage {
@private
  BOOL hasRequiresNetwork_:1;
  BOOL hasRequiresSatellite_:1;
  BOOL hasRequiresCell_:1;
  BOOL hasHasMonetaryCost_:1;
  BOOL hasSupportsAltitude_:1;
  BOOL hasSupportsSpeed_:1;
  BOOL hasSupportsBearing_:1;
  BOOL hasPowerRequirement_:1;
  BOOL hasAccuracy_:1;
  BOOL hasProvider_:1;
  BOOL requiresNetwork_:1;
  BOOL requiresSatellite_:1;
  BOOL requiresCell_:1;
  BOOL hasMonetaryCost_:1;
  BOOL supportsAltitude_:1;
  BOOL supportsSpeed_:1;
  BOOL supportsBearing_:1;
  int32_t powerRequirement;
  int32_t accuracy;
  NSString* provider;
}
- (BOOL) hasProvider;
- (BOOL) hasRequiresNetwork;
- (BOOL) hasRequiresSatellite;
- (BOOL) hasRequiresCell;
- (BOOL) hasHasMonetaryCost;
- (BOOL) hasSupportsAltitude;
- (BOOL) hasSupportsSpeed;
- (BOOL) hasSupportsBearing;
- (BOOL) hasPowerRequirement;
- (BOOL) hasAccuracy;
@property (readonly, strong) NSString* provider;
- (BOOL) requiresNetwork;
- (BOOL) requiresSatellite;
- (BOOL) requiresCell;
- (BOOL) hasMonetaryCost;
- (BOOL) supportsAltitude;
- (BOOL) supportsSpeed;
- (BOOL) supportsBearing;
@property (readonly) int32_t powerRequirement;
@property (readonly) int32_t accuracy;

+ (LocationProviderInfo*) defaultInstance;
- (LocationProviderInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationProviderInfo_Builder*) builder;
+ (LocationProviderInfo_Builder*) builder;
+ (LocationProviderInfo_Builder*) builderWithPrototype:(LocationProviderInfo*) prototype;
- (LocationProviderInfo_Builder*) toBuilder;

+ (LocationProviderInfo*) parseFromData:(NSData*) data;
+ (LocationProviderInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderInfo*) parseFromInputStream:(NSInputStream*) input;
+ (LocationProviderInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationProviderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationProviderInfo_Builder : PBGeneratedMessage_Builder {
@private
  LocationProviderInfo* result;
}

- (LocationProviderInfo*) defaultInstance;

- (LocationProviderInfo_Builder*) clear;
- (LocationProviderInfo_Builder*) clone;

- (LocationProviderInfo*) build;
- (LocationProviderInfo*) buildPartial;

- (LocationProviderInfo_Builder*) mergeFrom:(LocationProviderInfo*) other;
- (LocationProviderInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationProviderInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationProviderInfo_Builder*) setProvider:(NSString*) value;
- (LocationProviderInfo_Builder*) clearProvider;

- (BOOL) hasRequiresNetwork;
- (BOOL) requiresNetwork;
- (LocationProviderInfo_Builder*) setRequiresNetwork:(BOOL) value;
- (LocationProviderInfo_Builder*) clearRequiresNetwork;

- (BOOL) hasRequiresSatellite;
- (BOOL) requiresSatellite;
- (LocationProviderInfo_Builder*) setRequiresSatellite:(BOOL) value;
- (LocationProviderInfo_Builder*) clearRequiresSatellite;

- (BOOL) hasRequiresCell;
- (BOOL) requiresCell;
- (LocationProviderInfo_Builder*) setRequiresCell:(BOOL) value;
- (LocationProviderInfo_Builder*) clearRequiresCell;

- (BOOL) hasHasMonetaryCost;
- (BOOL) hasMonetaryCost;
- (LocationProviderInfo_Builder*) setHasMonetaryCost:(BOOL) value;
- (LocationProviderInfo_Builder*) clearHasMonetaryCost;

- (BOOL) hasSupportsAltitude;
- (BOOL) supportsAltitude;
- (LocationProviderInfo_Builder*) setSupportsAltitude:(BOOL) value;
- (LocationProviderInfo_Builder*) clearSupportsAltitude;

- (BOOL) hasSupportsSpeed;
- (BOOL) supportsSpeed;
- (LocationProviderInfo_Builder*) setSupportsSpeed:(BOOL) value;
- (LocationProviderInfo_Builder*) clearSupportsSpeed;

- (BOOL) hasSupportsBearing;
- (BOOL) supportsBearing;
- (LocationProviderInfo_Builder*) setSupportsBearing:(BOOL) value;
- (LocationProviderInfo_Builder*) clearSupportsBearing;

- (BOOL) hasPowerRequirement;
- (int32_t) powerRequirement;
- (LocationProviderInfo_Builder*) setPowerRequirement:(int32_t) value;
- (LocationProviderInfo_Builder*) clearPowerRequirement;

- (BOOL) hasAccuracy;
- (int32_t) accuracy;
- (LocationProviderInfo_Builder*) setAccuracy:(int32_t) value;
- (LocationProviderInfo_Builder*) clearAccuracy;
@end

#define LocationProviderStatus_provider @"provider"
#define LocationProviderStatus_status @"status"
#define LocationProviderStatus_extras @"extras"
@interface LocationProviderStatus : PBGeneratedMessage {
@private
  BOOL hasStatus_:1;
  BOOL hasProvider_:1;
  int32_t status;
  NSString* provider;
  NSMutableArray * extrasArray;
}
- (BOOL) hasProvider;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* provider;
@property (readonly) int32_t status;
@property (readonly, strong) NSArray * extras;
- (LocationProviderStatus_Tuple*)extrasAtIndex:(NSUInteger)index;

+ (LocationProviderStatus*) defaultInstance;
- (LocationProviderStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationProviderStatus_Builder*) builder;
+ (LocationProviderStatus_Builder*) builder;
+ (LocationProviderStatus_Builder*) builderWithPrototype:(LocationProviderStatus*) prototype;
- (LocationProviderStatus_Builder*) toBuilder;

+ (LocationProviderStatus*) parseFromData:(NSData*) data;
+ (LocationProviderStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderStatus*) parseFromInputStream:(NSInputStream*) input;
+ (LocationProviderStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationProviderStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Tuple_key @"key"
#define Tuple_value @"value"
@interface LocationProviderStatus_Tuple : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  NSString* key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly, strong) NSString* key;
@property (readonly, strong) NSString* value;

+ (LocationProviderStatus_Tuple*) defaultInstance;
- (LocationProviderStatus_Tuple*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationProviderStatus_Tuple_Builder*) builder;
+ (LocationProviderStatus_Tuple_Builder*) builder;
+ (LocationProviderStatus_Tuple_Builder*) builderWithPrototype:(LocationProviderStatus_Tuple*) prototype;
- (LocationProviderStatus_Tuple_Builder*) toBuilder;

+ (LocationProviderStatus_Tuple*) parseFromData:(NSData*) data;
+ (LocationProviderStatus_Tuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderStatus_Tuple*) parseFromInputStream:(NSInputStream*) input;
+ (LocationProviderStatus_Tuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderStatus_Tuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationProviderStatus_Tuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationProviderStatus_Tuple_Builder : PBGeneratedMessage_Builder {
@private
  LocationProviderStatus_Tuple* result;
}

- (LocationProviderStatus_Tuple*) defaultInstance;

- (LocationProviderStatus_Tuple_Builder*) clear;
- (LocationProviderStatus_Tuple_Builder*) clone;

- (LocationProviderStatus_Tuple*) build;
- (LocationProviderStatus_Tuple*) buildPartial;

- (LocationProviderStatus_Tuple_Builder*) mergeFrom:(LocationProviderStatus_Tuple*) other;
- (LocationProviderStatus_Tuple_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationProviderStatus_Tuple_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (LocationProviderStatus_Tuple_Builder*) setKey:(NSString*) value;
- (LocationProviderStatus_Tuple_Builder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (LocationProviderStatus_Tuple_Builder*) setValue:(NSString*) value;
- (LocationProviderStatus_Tuple_Builder*) clearValue;
@end

@interface LocationProviderStatus_Builder : PBGeneratedMessage_Builder {
@private
  LocationProviderStatus* result;
}

- (LocationProviderStatus*) defaultInstance;

- (LocationProviderStatus_Builder*) clear;
- (LocationProviderStatus_Builder*) clone;

- (LocationProviderStatus*) build;
- (LocationProviderStatus*) buildPartial;

- (LocationProviderStatus_Builder*) mergeFrom:(LocationProviderStatus*) other;
- (LocationProviderStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationProviderStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationProviderStatus_Builder*) setProvider:(NSString*) value;
- (LocationProviderStatus_Builder*) clearProvider;

- (BOOL) hasStatus;
- (int32_t) status;
- (LocationProviderStatus_Builder*) setStatus:(int32_t) value;
- (LocationProviderStatus_Builder*) clearStatus;

- (NSMutableArray *)extras;
- (LocationProviderStatus_Tuple*)extrasAtIndex:(NSUInteger)index;
- (LocationProviderStatus_Builder *)addExtras:(LocationProviderStatus_Tuple*)value;
- (LocationProviderStatus_Builder *)setExtrasArray:(NSArray *)array;
- (LocationProviderStatus_Builder *)clearExtras;
@end

#define LocationProviderEnabled_provider @"provider"
#define LocationProviderEnabled_enabled @"enabled"
@interface LocationProviderEnabled : PBGeneratedMessage {
@private
  BOOL hasEnabled_:1;
  BOOL hasProvider_:1;
  BOOL enabled_:1;
  NSString* provider;
}
- (BOOL) hasProvider;
- (BOOL) hasEnabled;
@property (readonly, strong) NSString* provider;
- (BOOL) enabled;

+ (LocationProviderEnabled*) defaultInstance;
- (LocationProviderEnabled*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationProviderEnabled_Builder*) builder;
+ (LocationProviderEnabled_Builder*) builder;
+ (LocationProviderEnabled_Builder*) builderWithPrototype:(LocationProviderEnabled*) prototype;
- (LocationProviderEnabled_Builder*) toBuilder;

+ (LocationProviderEnabled*) parseFromData:(NSData*) data;
+ (LocationProviderEnabled*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderEnabled*) parseFromInputStream:(NSInputStream*) input;
+ (LocationProviderEnabled*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationProviderEnabled*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationProviderEnabled*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationProviderEnabled_Builder : PBGeneratedMessage_Builder {
@private
  LocationProviderEnabled* result;
}

- (LocationProviderEnabled*) defaultInstance;

- (LocationProviderEnabled_Builder*) clear;
- (LocationProviderEnabled_Builder*) clone;

- (LocationProviderEnabled*) build;
- (LocationProviderEnabled*) buildPartial;

- (LocationProviderEnabled_Builder*) mergeFrom:(LocationProviderEnabled*) other;
- (LocationProviderEnabled_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationProviderEnabled_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationProviderEnabled_Builder*) setProvider:(NSString*) value;
- (LocationProviderEnabled_Builder*) clearProvider;

- (BOOL) hasEnabled;
- (BOOL) enabled;
- (LocationProviderEnabled_Builder*) setEnabled:(BOOL) value;
- (LocationProviderEnabled_Builder*) clearEnabled;
@end

#define LocationUpdate_latitude @"latitude"
#define LocationUpdate_longitude @"longitude"
#define LocationUpdate_time @"time"
#define LocationUpdate_provider @"provider"
#define LocationUpdate_accuracy @"accuracy"
#define LocationUpdate_altitude @"altitude"
#define LocationUpdate_bearing @"bearing"
#define LocationUpdate_speed @"speed"
@interface LocationUpdate : PBGeneratedMessage {
@private
  BOOL hasLatitude_:1;
  BOOL hasLongitude_:1;
  BOOL hasAltitude_:1;
  BOOL hasAccuracy_:1;
  BOOL hasBearing_:1;
  BOOL hasSpeed_:1;
  BOOL hasTime_:1;
  BOOL hasProvider_:1;
  Float64 latitude;
  Float64 longitude;
  Float64 altitude;
  Float32 accuracy;
  Float32 bearing;
  Float32 speed;
  int64_t time;
  NSString* provider;
}
- (BOOL) hasLatitude;
- (BOOL) hasLongitude;
- (BOOL) hasTime;
- (BOOL) hasProvider;
- (BOOL) hasAccuracy;
- (BOOL) hasAltitude;
- (BOOL) hasBearing;
- (BOOL) hasSpeed;
@property (readonly) Float64 latitude;
@property (readonly) Float64 longitude;
@property (readonly) int64_t time;
@property (readonly, strong) NSString* provider;
@property (readonly) Float32 accuracy;
@property (readonly) Float64 altitude;
@property (readonly) Float32 bearing;
@property (readonly) Float32 speed;

+ (LocationUpdate*) defaultInstance;
- (LocationUpdate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationUpdate_Builder*) builder;
+ (LocationUpdate_Builder*) builder;
+ (LocationUpdate_Builder*) builderWithPrototype:(LocationUpdate*) prototype;
- (LocationUpdate_Builder*) toBuilder;

+ (LocationUpdate*) parseFromData:(NSData*) data;
+ (LocationUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationUpdate*) parseFromInputStream:(NSInputStream*) input;
+ (LocationUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationUpdate_Builder : PBGeneratedMessage_Builder {
@private
  LocationUpdate* result;
}

- (LocationUpdate*) defaultInstance;

- (LocationUpdate_Builder*) clear;
- (LocationUpdate_Builder*) clone;

- (LocationUpdate*) build;
- (LocationUpdate*) buildPartial;

- (LocationUpdate_Builder*) mergeFrom:(LocationUpdate*) other;
- (LocationUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLatitude;
- (Float64) latitude;
- (LocationUpdate_Builder*) setLatitude:(Float64) value;
- (LocationUpdate_Builder*) clearLatitude;

- (BOOL) hasLongitude;
- (Float64) longitude;
- (LocationUpdate_Builder*) setLongitude:(Float64) value;
- (LocationUpdate_Builder*) clearLongitude;

- (BOOL) hasTime;
- (int64_t) time;
- (LocationUpdate_Builder*) setTime:(int64_t) value;
- (LocationUpdate_Builder*) clearTime;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationUpdate_Builder*) setProvider:(NSString*) value;
- (LocationUpdate_Builder*) clearProvider;

- (BOOL) hasAccuracy;
- (Float32) accuracy;
- (LocationUpdate_Builder*) setAccuracy:(Float32) value;
- (LocationUpdate_Builder*) clearAccuracy;

- (BOOL) hasAltitude;
- (Float64) altitude;
- (LocationUpdate_Builder*) setAltitude:(Float64) value;
- (LocationUpdate_Builder*) clearAltitude;

- (BOOL) hasBearing;
- (Float32) bearing;
- (LocationUpdate_Builder*) setBearing:(Float32) value;
- (LocationUpdate_Builder*) clearBearing;

- (BOOL) hasSpeed;
- (Float32) speed;
- (LocationUpdate_Builder*) setSpeed:(Float32) value;
- (LocationUpdate_Builder*) clearSpeed;
@end

#define LocationRequest_type @"type"
#define LocationRequest_providerInfo @"providerInfo"
#define LocationRequest_providerStatus @"providerStatus"
#define LocationRequest_providerEnabled @"providerEnabled"
#define LocationRequest_update @"update"
@interface LocationRequest : PBGeneratedMessage {
@private
  BOOL hasProviderInfo_:1;
  BOOL hasProviderStatus_:1;
  BOOL hasProviderEnabled_:1;
  BOOL hasUpdate_:1;
  BOOL hasType_:1;
  LocationProviderInfo* providerInfo;
  LocationProviderStatus* providerStatus;
  LocationProviderEnabled* providerEnabled;
  LocationUpdate* update;
  LocationRequest_LocationRequestType type;
}
- (BOOL) hasType;
- (BOOL) hasProviderInfo;
- (BOOL) hasProviderStatus;
- (BOOL) hasProviderEnabled;
- (BOOL) hasUpdate;
@property (readonly) LocationRequest_LocationRequestType type;
@property (readonly, strong) LocationProviderInfo* providerInfo;
@property (readonly, strong) LocationProviderStatus* providerStatus;
@property (readonly, strong) LocationProviderEnabled* providerEnabled;
@property (readonly, strong) LocationUpdate* update;

+ (LocationRequest*) defaultInstance;
- (LocationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationRequest_Builder*) builder;
+ (LocationRequest_Builder*) builder;
+ (LocationRequest_Builder*) builderWithPrototype:(LocationRequest*) prototype;
- (LocationRequest_Builder*) toBuilder;

+ (LocationRequest*) parseFromData:(NSData*) data;
+ (LocationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (LocationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationRequest_Builder : PBGeneratedMessage_Builder {
@private
  LocationRequest* result;
}

- (LocationRequest*) defaultInstance;

- (LocationRequest_Builder*) clear;
- (LocationRequest_Builder*) clone;

- (LocationRequest*) build;
- (LocationRequest*) buildPartial;

- (LocationRequest_Builder*) mergeFrom:(LocationRequest*) other;
- (LocationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (LocationRequest_LocationRequestType) type;
- (LocationRequest_Builder*) setType:(LocationRequest_LocationRequestType) value;
- (LocationRequest_Builder*) clearType;

- (BOOL) hasProviderInfo;
- (LocationProviderInfo*) providerInfo;
- (LocationRequest_Builder*) setProviderInfo:(LocationProviderInfo*) value;
- (LocationRequest_Builder*) setProviderInfoBuilder:(LocationProviderInfo_Builder*) builderForValue;
- (LocationRequest_Builder*) mergeProviderInfo:(LocationProviderInfo*) value;
- (LocationRequest_Builder*) clearProviderInfo;

- (BOOL) hasProviderStatus;
- (LocationProviderStatus*) providerStatus;
- (LocationRequest_Builder*) setProviderStatus:(LocationProviderStatus*) value;
- (LocationRequest_Builder*) setProviderStatusBuilder:(LocationProviderStatus_Builder*) builderForValue;
- (LocationRequest_Builder*) mergeProviderStatus:(LocationProviderStatus*) value;
- (LocationRequest_Builder*) clearProviderStatus;

- (BOOL) hasProviderEnabled;
- (LocationProviderEnabled*) providerEnabled;
- (LocationRequest_Builder*) setProviderEnabled:(LocationProviderEnabled*) value;
- (LocationRequest_Builder*) setProviderEnabledBuilder:(LocationProviderEnabled_Builder*) builderForValue;
- (LocationRequest_Builder*) mergeProviderEnabled:(LocationProviderEnabled*) value;
- (LocationRequest_Builder*) clearProviderEnabled;

- (BOOL) hasUpdate;
- (LocationUpdate*) update;
- (LocationRequest_Builder*) setUpdate:(LocationUpdate*) value;
- (LocationRequest_Builder*) setUpdateBuilder:(LocationUpdate_Builder*) builderForValue;
- (LocationRequest_Builder*) mergeUpdate:(LocationUpdate*) value;
- (LocationRequest_Builder*) clearUpdate;
@end

#define LocationSubscribe_type @"type"
#define LocationSubscribe_provider @"provider"
#define LocationSubscribe_minTime @"minTime"
#define LocationSubscribe_minDistance @"minDistance"
@interface LocationSubscribe : PBGeneratedMessage {
@private
  BOOL hasMinDistance_:1;
  BOOL hasMinTime_:1;
  BOOL hasProvider_:1;
  BOOL hasType_:1;
  Float32 minDistance;
  int64_t minTime;
  NSString* provider;
  LocationSubscribe_LocationSubscribeType type;
}
- (BOOL) hasType;
- (BOOL) hasProvider;
- (BOOL) hasMinTime;
- (BOOL) hasMinDistance;
@property (readonly) LocationSubscribe_LocationSubscribeType type;
@property (readonly, strong) NSString* provider;
@property (readonly) int64_t minTime;
@property (readonly) Float32 minDistance;

+ (LocationSubscribe*) defaultInstance;
- (LocationSubscribe*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationSubscribe_Builder*) builder;
+ (LocationSubscribe_Builder*) builder;
+ (LocationSubscribe_Builder*) builderWithPrototype:(LocationSubscribe*) prototype;
- (LocationSubscribe_Builder*) toBuilder;

+ (LocationSubscribe*) parseFromData:(NSData*) data;
+ (LocationSubscribe*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationSubscribe*) parseFromInputStream:(NSInputStream*) input;
+ (LocationSubscribe*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationSubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationSubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationSubscribe_Builder : PBGeneratedMessage_Builder {
@private
  LocationSubscribe* result;
}

- (LocationSubscribe*) defaultInstance;

- (LocationSubscribe_Builder*) clear;
- (LocationSubscribe_Builder*) clone;

- (LocationSubscribe*) build;
- (LocationSubscribe*) buildPartial;

- (LocationSubscribe_Builder*) mergeFrom:(LocationSubscribe*) other;
- (LocationSubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationSubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (LocationSubscribe_LocationSubscribeType) type;
- (LocationSubscribe_Builder*) setType:(LocationSubscribe_LocationSubscribeType) value;
- (LocationSubscribe_Builder*) clearType;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationSubscribe_Builder*) setProvider:(NSString*) value;
- (LocationSubscribe_Builder*) clearProvider;

- (BOOL) hasMinTime;
- (int64_t) minTime;
- (LocationSubscribe_Builder*) setMinTime:(int64_t) value;
- (LocationSubscribe_Builder*) clearMinTime;

- (BOOL) hasMinDistance;
- (Float32) minDistance;
- (LocationSubscribe_Builder*) setMinDistance:(Float32) value;
- (LocationSubscribe_Builder*) clearMinDistance;
@end

#define LocationUnsubscribe_provider @"provider"
@interface LocationUnsubscribe : PBGeneratedMessage {
@private
  BOOL hasProvider_:1;
  NSString* provider;
}
- (BOOL) hasProvider;
@property (readonly, strong) NSString* provider;

+ (LocationUnsubscribe*) defaultInstance;
- (LocationUnsubscribe*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationUnsubscribe_Builder*) builder;
+ (LocationUnsubscribe_Builder*) builder;
+ (LocationUnsubscribe_Builder*) builderWithPrototype:(LocationUnsubscribe*) prototype;
- (LocationUnsubscribe_Builder*) toBuilder;

+ (LocationUnsubscribe*) parseFromData:(NSData*) data;
+ (LocationUnsubscribe*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationUnsubscribe*) parseFromInputStream:(NSInputStream*) input;
+ (LocationUnsubscribe*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationUnsubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationUnsubscribe*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationUnsubscribe_Builder : PBGeneratedMessage_Builder {
@private
  LocationUnsubscribe* result;
}

- (LocationUnsubscribe*) defaultInstance;

- (LocationUnsubscribe_Builder*) clear;
- (LocationUnsubscribe_Builder*) clone;

- (LocationUnsubscribe*) build;
- (LocationUnsubscribe*) buildPartial;

- (LocationUnsubscribe_Builder*) mergeFrom:(LocationUnsubscribe*) other;
- (LocationUnsubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationUnsubscribe_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationUnsubscribe_Builder*) setProvider:(NSString*) value;
- (LocationUnsubscribe_Builder*) clearProvider;
@end

#define LocationResponse_type @"type"
#define LocationResponse_subscribe @"subscribe"
#define LocationResponse_unsubscribe @"unsubscribe"
@interface LocationResponse : PBGeneratedMessage {
@private
  BOOL hasSubscribe_:1;
  BOOL hasUnsubscribe_:1;
  BOOL hasType_:1;
  LocationSubscribe* subscribe;
  LocationUnsubscribe* unsubscribe;
  LocationResponse_LocationResponseType type;
}
- (BOOL) hasType;
- (BOOL) hasSubscribe;
- (BOOL) hasUnsubscribe;
@property (readonly) LocationResponse_LocationResponseType type;
@property (readonly, strong) LocationSubscribe* subscribe;
@property (readonly, strong) LocationUnsubscribe* unsubscribe;

+ (LocationResponse*) defaultInstance;
- (LocationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationResponse_Builder*) builder;
+ (LocationResponse_Builder*) builder;
+ (LocationResponse_Builder*) builderWithPrototype:(LocationResponse*) prototype;
- (LocationResponse_Builder*) toBuilder;

+ (LocationResponse*) parseFromData:(NSData*) data;
+ (LocationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (LocationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationResponse_Builder : PBGeneratedMessage_Builder {
@private
  LocationResponse* result;
}

- (LocationResponse*) defaultInstance;

- (LocationResponse_Builder*) clear;
- (LocationResponse_Builder*) clone;

- (LocationResponse*) build;
- (LocationResponse*) buildPartial;

- (LocationResponse_Builder*) mergeFrom:(LocationResponse*) other;
- (LocationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (LocationResponse_LocationResponseType) type;
- (LocationResponse_Builder*) setType:(LocationResponse_LocationResponseType) value;
- (LocationResponse_Builder*) clearType;

- (BOOL) hasSubscribe;
- (LocationSubscribe*) subscribe;
- (LocationResponse_Builder*) setSubscribe:(LocationSubscribe*) value;
- (LocationResponse_Builder*) setSubscribeBuilder:(LocationSubscribe_Builder*) builderForValue;
- (LocationResponse_Builder*) mergeSubscribe:(LocationSubscribe*) value;
- (LocationResponse_Builder*) clearSubscribe;

- (BOOL) hasUnsubscribe;
- (LocationUnsubscribe*) unsubscribe;
- (LocationResponse_Builder*) setUnsubscribe:(LocationUnsubscribe*) value;
- (LocationResponse_Builder*) setUnsubscribeBuilder:(LocationUnsubscribe_Builder*) builderForValue;
- (LocationResponse_Builder*) mergeUnsubscribe:(LocationUnsubscribe*) value;
- (LocationResponse_Builder*) clearUnsubscribe;
@end

#define AuthRequest_type @"type"
#define AuthRequest_username @"username"
#define AuthRequest_sessionToken @"sessionToken"
#define AuthRequest_password @"password"
#define AuthRequest_securityToken @"securityToken"
@interface AuthRequest : PBGeneratedMessage {
@private
  BOOL hasUsername_:1;
  BOOL hasSessionToken_:1;
  BOOL hasPassword_:1;
  BOOL hasSecurityToken_:1;
  BOOL hasType_:1;
  NSString* username;
  NSString* sessionToken;
  NSString* password;
  NSString* securityToken;
  AuthRequest_AuthRequestType type;
}
- (BOOL) hasType;
- (BOOL) hasUsername;
- (BOOL) hasSessionToken;
- (BOOL) hasPassword;
- (BOOL) hasSecurityToken;
@property (readonly) AuthRequest_AuthRequestType type;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* sessionToken;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSString* securityToken;

+ (AuthRequest*) defaultInstance;
- (AuthRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AuthRequest_Builder*) builder;
+ (AuthRequest_Builder*) builder;
+ (AuthRequest_Builder*) builderWithPrototype:(AuthRequest*) prototype;
- (AuthRequest_Builder*) toBuilder;

+ (AuthRequest*) parseFromData:(NSData*) data;
+ (AuthRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthRequest*) parseFromInputStream:(NSInputStream*) input;
+ (AuthRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AuthRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AuthRequest_Builder : PBGeneratedMessage_Builder {
@private
  AuthRequest* result;
}

- (AuthRequest*) defaultInstance;

- (AuthRequest_Builder*) clear;
- (AuthRequest_Builder*) clone;

- (AuthRequest*) build;
- (AuthRequest*) buildPartial;

- (AuthRequest_Builder*) mergeFrom:(AuthRequest*) other;
- (AuthRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AuthRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (AuthRequest_AuthRequestType) type;
- (AuthRequest_Builder*) setType:(AuthRequest_AuthRequestType) value;
- (AuthRequest_Builder*) clearType;

- (BOOL) hasUsername;
- (NSString*) username;
- (AuthRequest_Builder*) setUsername:(NSString*) value;
- (AuthRequest_Builder*) clearUsername;

- (BOOL) hasSessionToken;
- (NSString*) sessionToken;
- (AuthRequest_Builder*) setSessionToken:(NSString*) value;
- (AuthRequest_Builder*) clearSessionToken;

- (BOOL) hasPassword;
- (NSString*) password;
- (AuthRequest_Builder*) setPassword:(NSString*) value;
- (AuthRequest_Builder*) clearPassword;

- (BOOL) hasSecurityToken;
- (NSString*) securityToken;
- (AuthRequest_Builder*) setSecurityToken:(NSString*) value;
- (AuthRequest_Builder*) clearSecurityToken;
@end

#define AuthResponse_type @"type"
#define AuthResponse_sessionInfo @"sessionInfo"
@interface AuthResponse : PBGeneratedMessage {
@private
  BOOL hasSessionInfo_:1;
  BOOL hasType_:1;
  SessionInfo* sessionInfo;
  AuthResponse_AuthResponseType type;
}
- (BOOL) hasType;
- (BOOL) hasSessionInfo;
@property (readonly) AuthResponse_AuthResponseType type;
@property (readonly, strong) SessionInfo* sessionInfo;

+ (AuthResponse*) defaultInstance;
- (AuthResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AuthResponse_Builder*) builder;
+ (AuthResponse_Builder*) builder;
+ (AuthResponse_Builder*) builderWithPrototype:(AuthResponse*) prototype;
- (AuthResponse_Builder*) toBuilder;

+ (AuthResponse*) parseFromData:(NSData*) data;
+ (AuthResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthResponse*) parseFromInputStream:(NSInputStream*) input;
+ (AuthResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AuthResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AuthResponse_Builder : PBGeneratedMessage_Builder {
@private
  AuthResponse* result;
}

- (AuthResponse*) defaultInstance;

- (AuthResponse_Builder*) clear;
- (AuthResponse_Builder*) clone;

- (AuthResponse*) build;
- (AuthResponse*) buildPartial;

- (AuthResponse_Builder*) mergeFrom:(AuthResponse*) other;
- (AuthResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AuthResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (AuthResponse_AuthResponseType) type;
- (AuthResponse_Builder*) setType:(AuthResponse_AuthResponseType) value;
- (AuthResponse_Builder*) clearType;

- (BOOL) hasSessionInfo;
- (SessionInfo*) sessionInfo;
- (AuthResponse_Builder*) setSessionInfo:(SessionInfo*) value;
- (AuthResponse_Builder*) setSessionInfoBuilder:(SessionInfo_Builder*) builderForValue;
- (AuthResponse_Builder*) mergeSessionInfo:(SessionInfo*) value;
- (AuthResponse_Builder*) clearSessionInfo;
@end

#define SessionInfo_token @"token"
#define SessionInfo_maxLength @"maxLength"
#define SessionInfo_gracePeriod @"gracePeriod"
@interface SessionInfo : PBGeneratedMessage {
@private
  BOOL hasMaxLength_:1;
  BOOL hasGracePeriod_:1;
  BOOL hasToken_:1;
  int32_t maxLength;
  int32_t gracePeriod;
  NSString* token;
}
- (BOOL) hasToken;
- (BOOL) hasMaxLength;
- (BOOL) hasGracePeriod;
@property (readonly, strong) NSString* token;
@property (readonly) int32_t maxLength;
@property (readonly) int32_t gracePeriod;

+ (SessionInfo*) defaultInstance;
- (SessionInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SessionInfo_Builder*) builder;
+ (SessionInfo_Builder*) builder;
+ (SessionInfo_Builder*) builderWithPrototype:(SessionInfo*) prototype;
- (SessionInfo_Builder*) toBuilder;

+ (SessionInfo*) parseFromData:(NSData*) data;
+ (SessionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionInfo*) parseFromInputStream:(NSInputStream*) input;
+ (SessionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SessionInfo_Builder : PBGeneratedMessage_Builder {
@private
  SessionInfo* result;
}

- (SessionInfo*) defaultInstance;

- (SessionInfo_Builder*) clear;
- (SessionInfo_Builder*) clone;

- (SessionInfo*) build;
- (SessionInfo*) buildPartial;

- (SessionInfo_Builder*) mergeFrom:(SessionInfo*) other;
- (SessionInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SessionInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasToken;
- (NSString*) token;
- (SessionInfo_Builder*) setToken:(NSString*) value;
- (SessionInfo_Builder*) clearToken;

- (BOOL) hasMaxLength;
- (int32_t) maxLength;
- (SessionInfo_Builder*) setMaxLength:(int32_t) value;
- (SessionInfo_Builder*) clearMaxLength;

- (BOOL) hasGracePeriod;
- (int32_t) gracePeriod;
- (SessionInfo_Builder*) setGracePeriod:(int32_t) value;
- (SessionInfo_Builder*) clearGracePeriod;
@end

#define VideoRequest_ip @"ip"
#define VideoRequest_port @"port"
#define VideoRequest_bitrate @"bitrate"
@interface VideoRequest : PBGeneratedMessage {
@private
  BOOL hasPort_:1;
  BOOL hasBitrate_:1;
  BOOL hasIp_:1;
  int32_t port;
  int32_t bitrate;
  NSString* ip;
}
- (BOOL) hasIp;
- (BOOL) hasPort;
- (BOOL) hasBitrate;
@property (readonly, strong) NSString* ip;
@property (readonly) int32_t port;
@property (readonly) int32_t bitrate;

+ (VideoRequest*) defaultInstance;
- (VideoRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (VideoRequest_Builder*) builder;
+ (VideoRequest_Builder*) builder;
+ (VideoRequest_Builder*) builderWithPrototype:(VideoRequest*) prototype;
- (VideoRequest_Builder*) toBuilder;

+ (VideoRequest*) parseFromData:(NSData*) data;
+ (VideoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (VideoRequest*) parseFromInputStream:(NSInputStream*) input;
+ (VideoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (VideoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (VideoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface VideoRequest_Builder : PBGeneratedMessage_Builder {
@private
  VideoRequest* result;
}

- (VideoRequest*) defaultInstance;

- (VideoRequest_Builder*) clear;
- (VideoRequest_Builder*) clone;

- (VideoRequest*) build;
- (VideoRequest*) buildPartial;

- (VideoRequest_Builder*) mergeFrom:(VideoRequest*) other;
- (VideoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (VideoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIp;
- (NSString*) ip;
- (VideoRequest_Builder*) setIp:(NSString*) value;
- (VideoRequest_Builder*) clearIp;

- (BOOL) hasPort;
- (int32_t) port;
- (VideoRequest_Builder*) setPort:(int32_t) value;
- (VideoRequest_Builder*) clearPort;

- (BOOL) hasBitrate;
- (int32_t) bitrate;
- (VideoRequest_Builder*) setBitrate:(int32_t) value;
- (VideoRequest_Builder*) clearBitrate;
@end

#define WebRTCMessage_type @"type"
#define WebRTCMessage_json @"json"
@interface WebRTCMessage : PBGeneratedMessage {
@private
  BOOL hasJson_:1;
  BOOL hasType_:1;
  NSString* json;
  WebRTCMessage_WebRTCType type;
}
- (BOOL) hasType;
- (BOOL) hasJson;
@property (readonly) WebRTCMessage_WebRTCType type;
@property (readonly, strong) NSString* json;

+ (WebRTCMessage*) defaultInstance;
- (WebRTCMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WebRTCMessage_Builder*) builder;
+ (WebRTCMessage_Builder*) builder;
+ (WebRTCMessage_Builder*) builderWithPrototype:(WebRTCMessage*) prototype;
- (WebRTCMessage_Builder*) toBuilder;

+ (WebRTCMessage*) parseFromData:(NSData*) data;
+ (WebRTCMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WebRTCMessage*) parseFromInputStream:(NSInputStream*) input;
+ (WebRTCMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WebRTCMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WebRTCMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WebRTCMessage_Builder : PBGeneratedMessage_Builder {
@private
  WebRTCMessage* result;
}

- (WebRTCMessage*) defaultInstance;

- (WebRTCMessage_Builder*) clear;
- (WebRTCMessage_Builder*) clone;

- (WebRTCMessage*) build;
- (WebRTCMessage*) buildPartial;

- (WebRTCMessage_Builder*) mergeFrom:(WebRTCMessage*) other;
- (WebRTCMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WebRTCMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (WebRTCMessage_WebRTCType) type;
- (WebRTCMessage_Builder*) setType:(WebRTCMessage_WebRTCType) value;
- (WebRTCMessage_Builder*) clearType;

- (BOOL) hasJson;
- (NSString*) json;
- (WebRTCMessage_Builder*) setJson:(NSString*) value;
- (WebRTCMessage_Builder*) clearJson;
@end

#define VideoStreamInfo_iceServers @"iceServers"
#define VideoStreamInfo_pcConstraints @"pcConstraints"
#define VideoStreamInfo_videoConstraints @"videoConstraints"
@interface VideoStreamInfo : PBGeneratedMessage {
@private
  BOOL hasIceServers_:1;
  BOOL hasPcConstraints_:1;
  BOOL hasVideoConstraints_:1;
  NSString* iceServers;
  NSString* pcConstraints;
  NSString* videoConstraints;
}
- (BOOL) hasIceServers;
- (BOOL) hasPcConstraints;
- (BOOL) hasVideoConstraints;
@property (readonly, strong) NSString* iceServers;
@property (readonly, strong) NSString* pcConstraints;
@property (readonly, strong) NSString* videoConstraints;

+ (VideoStreamInfo*) defaultInstance;
- (VideoStreamInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (VideoStreamInfo_Builder*) builder;
+ (VideoStreamInfo_Builder*) builder;
+ (VideoStreamInfo_Builder*) builderWithPrototype:(VideoStreamInfo*) prototype;
- (VideoStreamInfo_Builder*) toBuilder;

+ (VideoStreamInfo*) parseFromData:(NSData*) data;
+ (VideoStreamInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (VideoStreamInfo*) parseFromInputStream:(NSInputStream*) input;
+ (VideoStreamInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (VideoStreamInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (VideoStreamInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface VideoStreamInfo_Builder : PBGeneratedMessage_Builder {
@private
  VideoStreamInfo* result;
}

- (VideoStreamInfo*) defaultInstance;

- (VideoStreamInfo_Builder*) clear;
- (VideoStreamInfo_Builder*) clone;

- (VideoStreamInfo*) build;
- (VideoStreamInfo*) buildPartial;

- (VideoStreamInfo_Builder*) mergeFrom:(VideoStreamInfo*) other;
- (VideoStreamInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (VideoStreamInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIceServers;
- (NSString*) iceServers;
- (VideoStreamInfo_Builder*) setIceServers:(NSString*) value;
- (VideoStreamInfo_Builder*) clearIceServers;

- (BOOL) hasPcConstraints;
- (NSString*) pcConstraints;
- (VideoStreamInfo_Builder*) setPcConstraints:(NSString*) value;
- (VideoStreamInfo_Builder*) clearPcConstraints;

- (BOOL) hasVideoConstraints;
- (NSString*) videoConstraints;
- (VideoStreamInfo_Builder*) setVideoConstraints:(NSString*) value;
- (VideoStreamInfo_Builder*) clearVideoConstraints;
@end

#define RotationInfo_rotation @"rotation"
@interface RotationInfo : PBGeneratedMessage {
@private
  BOOL hasRotation_:1;
  int32_t rotation;
}
- (BOOL) hasRotation;
@property (readonly) int32_t rotation;

+ (RotationInfo*) defaultInstance;
- (RotationInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RotationInfo_Builder*) builder;
+ (RotationInfo_Builder*) builder;
+ (RotationInfo_Builder*) builderWithPrototype:(RotationInfo*) prototype;
- (RotationInfo_Builder*) toBuilder;

+ (RotationInfo*) parseFromData:(NSData*) data;
+ (RotationInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RotationInfo*) parseFromInputStream:(NSInputStream*) input;
+ (RotationInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RotationInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RotationInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RotationInfo_Builder : PBGeneratedMessage_Builder {
@private
  RotationInfo* result;
}

- (RotationInfo*) defaultInstance;

- (RotationInfo_Builder*) clear;
- (RotationInfo_Builder*) clone;

- (RotationInfo*) build;
- (RotationInfo*) buildPartial;

- (RotationInfo_Builder*) mergeFrom:(RotationInfo*) other;
- (RotationInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RotationInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRotation;
- (int32_t) rotation;
- (RotationInfo_Builder*) setRotation:(int32_t) value;
- (RotationInfo_Builder*) clearRotation;
@end

#define Ping_startDate @"startDate"
@interface Ping : PBGeneratedMessage {
@private
  BOOL hasStartDate_:1;
  int64_t startDate;
}
- (BOOL) hasStartDate;
@property (readonly) int64_t startDate;

+ (Ping*) defaultInstance;
- (Ping*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Ping_Builder*) builder;
+ (Ping_Builder*) builder;
+ (Ping_Builder*) builderWithPrototype:(Ping*) prototype;
- (Ping_Builder*) toBuilder;

+ (Ping*) parseFromData:(NSData*) data;
+ (Ping*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Ping*) parseFromInputStream:(NSInputStream*) input;
+ (Ping*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Ping*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Ping*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Ping_Builder : PBGeneratedMessage_Builder {
@private
  Ping* result;
}

- (Ping*) defaultInstance;

- (Ping_Builder*) clear;
- (Ping_Builder*) clone;

- (Ping*) build;
- (Ping*) buildPartial;

- (Ping_Builder*) mergeFrom:(Ping*) other;
- (Ping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Ping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStartDate;
- (int64_t) startDate;
- (Ping_Builder*) setStartDate:(int64_t) value;
- (Ping_Builder*) clearStartDate;
@end

